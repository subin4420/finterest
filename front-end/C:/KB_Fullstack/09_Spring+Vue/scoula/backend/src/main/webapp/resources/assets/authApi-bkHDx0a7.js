import{m as c,u as o,p as i}from"./index-8Y8a_nyi.js";const s=c.create({timeout:1e3});s.interceptors.request.use(a=>{const{getToken:t}=o(),e=t();return e&&(a.headers.Authorization=`Bearer ${e}`,console.log(a.headers.Authorization)),a},a=>(console.log(a),Promise.reject(a)));s.interceptors.response.use(a=>a.status===200?a:a.status===404?Promise.reject("404: 페이지 없음 "+a.request):a,async a=>{var t,e;if(((t=a.response)==null?void 0:t.status)===401){const{logout:u}=o();return u(),i.push("/auth/login?error=loing_required"),Promise.reject({error:"로그인이 필요한 서비스입니다."})}else if(((e=a.response)==null?void 0:e.status)===403)return Promise.reject({error:"권한이 부족합니다."});return Promise.reject(a)});const r="/api/member",n={"Content-Type":"multipart/form-data"},d={async checkUsername(a){const{data:t}=await s.get(`${r}/checkusername/${a}`);return console.log("AUTH GET CHECKUSERNAME",t),t},async get(a){const{data:t}=await s.get(`${r}/${a}`);return console.log("AUTH GET",t),t},async create(a){const t=new FormData;t.append("username",a.username),t.append("email",a.email),t.append("password",a.password),a.avatar&&t.append("avatar",a.avatar);const{data:e}=await s.post(r,t,n);return console.log("AUTH POST: ",e),e},async update(a){const t=new FormData;t.append("username",a.username),t.append("password",a.password),t.append("email",a.email),a.avatar&&t.append("avatar",a.avatar);const{data:e}=await s.put(`${r}/${a.username}`,t,n);return console.log("AUTH PUT: ",e),e},async delete(a){const{data:t}=await s.delete(`${r}/${a}`);return console.log("AUTH DELETE: ",t),t},async changePassword(a){const{data:t}=await s.put(`${r}/${a.username}/changepassword`,a);return console.log("AUTH PUT: ",t),t}};export{d as a};
